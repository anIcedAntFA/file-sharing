/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as LocaleRouteRouteImport } from './app/routes/$locale/route'
import { Route as LocaleIndexRouteImport } from './app/routes/$locale/index'
import { Route as LocaleFileSharingRouteImport } from './app/routes/$locale/file-sharing'
import { Route as LocaleAboutRouteImport } from './app/routes/$locale/about'

const LocaleRouteRoute = LocaleRouteRouteImport.update({
  id: '/$locale',
  path: '/$locale',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleIndexRoute = LocaleIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleRouteRoute,
} as any)
const LocaleFileSharingRoute = LocaleFileSharingRouteImport.update({
  id: '/file-sharing',
  path: '/file-sharing',
  getParentRoute: () => LocaleRouteRoute,
} as any)
const LocaleAboutRoute = LocaleAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LocaleRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/$locale': typeof LocaleRouteRouteWithChildren
  '/$locale/about': typeof LocaleAboutRoute
  '/$locale/file-sharing': typeof LocaleFileSharingRoute
  '/$locale/': typeof LocaleIndexRoute
}
export interface FileRoutesByTo {
  '/$locale/about': typeof LocaleAboutRoute
  '/$locale/file-sharing': typeof LocaleFileSharingRoute
  '/$locale': typeof LocaleIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$locale': typeof LocaleRouteRouteWithChildren
  '/$locale/about': typeof LocaleAboutRoute
  '/$locale/file-sharing': typeof LocaleFileSharingRoute
  '/$locale/': typeof LocaleIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$locale'
    | '/$locale/about'
    | '/$locale/file-sharing'
    | '/$locale/'
  fileRoutesByTo: FileRoutesByTo
  to: '/$locale/about' | '/$locale/file-sharing' | '/$locale'
  id:
    | '__root__'
    | '/$locale'
    | '/$locale/about'
    | '/$locale/file-sharing'
    | '/$locale/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LocaleRouteRoute: typeof LocaleRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale': {
      id: '/$locale'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/': {
      id: '/$locale/'
      path: '/'
      fullPath: '/$locale/'
      preLoaderRoute: typeof LocaleIndexRouteImport
      parentRoute: typeof LocaleRouteRoute
    }
    '/$locale/file-sharing': {
      id: '/$locale/file-sharing'
      path: '/file-sharing'
      fullPath: '/$locale/file-sharing'
      preLoaderRoute: typeof LocaleFileSharingRouteImport
      parentRoute: typeof LocaleRouteRoute
    }
    '/$locale/about': {
      id: '/$locale/about'
      path: '/about'
      fullPath: '/$locale/about'
      preLoaderRoute: typeof LocaleAboutRouteImport
      parentRoute: typeof LocaleRouteRoute
    }
  }
}

interface LocaleRouteRouteChildren {
  LocaleAboutRoute: typeof LocaleAboutRoute
  LocaleFileSharingRoute: typeof LocaleFileSharingRoute
  LocaleIndexRoute: typeof LocaleIndexRoute
}

const LocaleRouteRouteChildren: LocaleRouteRouteChildren = {
  LocaleAboutRoute: LocaleAboutRoute,
  LocaleFileSharingRoute: LocaleFileSharingRoute,
  LocaleIndexRoute: LocaleIndexRoute,
}

const LocaleRouteRouteWithChildren = LocaleRouteRoute._addFileChildren(
  LocaleRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LocaleRouteRoute: LocaleRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
